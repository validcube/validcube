name: "âœ¨ Python"

on: 
  workflow_dispatch:
  pull_request:
    paths:
      - "**.py"
      - "requirements.txt"
      - "dev-requirements.txt"
      - ".github/workflows/python.yml"

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    name: analyse
    continue-on-error: true  
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
        
    runs-on: ${{ matrix.os }}
        
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
        
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        allow-prereleases: true
        
    - name: Install dependencies
      run: | # $(git ls-files '*dev-requirements.txt') # $(git ls-files '*requirements.txt')
        python -m pip install --upgrade pip
        pip install -r scripts/requirements.txt 
        pip install -r scripts/dev-requirements.txt
        
    - name: Lint check with Ruff
      run: |
        if [ ${{ matrix.python-version }} == "3.7" ]; then
          ruff check $(git ls-files '*.py') --target-version=py37
        fi
        if [ ${{ matrix.python-version }} == "3.8" ]; then
          ruff check $(git ls-files '*.py') --target-version=py38
        fi
        if [ ${{ matrix.python-version }} == "3.9" ]; then
          ruff check $(git ls-files '*.py') --target-version=py39
        fi
        if [ ${{ matrix.python-version }} == "3.10" ]; then
          ruff check $(git ls-files '*.py') --target-version=py310
        fi
        if [ ${{ matrix.python-version }} == "3.11" ]; then
          ruff check $(git ls-files '*.py') --target-version=py311
        fi
        if [ ${{ matrix.python-version }} == "3.12" ]; then
          ruff check $(git ls-files '*.py') --target-version=py312
        fi

    - name: Static analysis with MyPy
      run: |
        mypy $(git ls-files '*.py') --python-version ${{ matrix.python-version }}

    - name: Testing with Pytest
      run: |
        pytest
